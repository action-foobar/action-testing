name: secret-copier

env:
  TERRAFORM_BASE_PATH: terraform

on:
  workflow_dispatch:

jobs:
  prep:
    runs-on: ubuntu-latest
    name: prep
    outputs:
       matrix: ${{ steps.setmatrix.outputs.matrix }}
    steps:
      - name: Set Dynamic Matrix
        id: setmatrix
        shell: bash
        run: |
          set +xe
          declare -a repos=("action-weepee"
              "i-ate-the-frubes")      

          populate-matrix(){
              COUNTER=0
              LIM=${#repos[@]}
              printf '{"include":['
              for OUTPUT in ${repos[*]}
              do  
                  let COUNTER++
                  if [ ! $COUNTER == $LIM ]
                      then
                          printf '{"repo": "%s"},' $OUTPUT
                      else
                          printf '{"repo": "%s"}' $OUTPUT
                      fi
              done
              printf ']}'
          }
          varmatrix=$(populate-matrix) 
          echo "::set-output name=matrix::$varmatrix"


  Nonprod-secret-copy:
    needs: prep
    runs-on: ubuntu-latest
    name: nonprod-secret-copy
    environment:
      name: Nonprod
    env:
      LAYER_NAME: secret-creator
    strategy:
      matrix: ${{ fromJson(needs.prep.outputs.matrix) }}
      fail-fast: false
      max-parallel: 25
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: terraform apply
        uses: dflook/terraform-apply@v1.24.0
        env:
          GITHUB_TOKEN: ${{ secrets.SAML_GITHUB_TOKEN }}
        with:
          auto_approve: true
          path: ${{ env.TERRAFORM_BASE_PATH }}/${{ env.LAYER_NAME }}
          label: secret-replicator
          variables: |
            environment_name = "Nonprod"
            github_repo_name = "${{ matrix.repo }}"
            sp_client_id     = "${{ secrets.SP_CLIENT_ID }}"
            sp_client_secret = "${{ secrets.SP_PASSWORD }}"
            subscription_id  = "${{ secrets.SUBSCRIPTION_ID }}"